include:
  - project: 'experiments/ci-templates'
    ref: 'development'
    file: 'templates/cd-templates.yml'

variables:
  APP_NAME: "dashboard"
  DEPLOY_SERVER: "mars.butterflycluster.com"
  DEPLOY_USER: "deploy_sa"
  ENV_NAME: "mars"
  DEPLOY_BASE_PATH: "/apps/data/${APP_NAME}"
  DEPLOY_TIMESTAMP: "$(date +%Y%m%d_%H%M%S)"
  RELEASE_PATH: "${DEPLOY_BASE_PATH}/releases/${DEPLOY_TIMESTAMP}"
  LINK_PATH: "${DEPLOY_BASE_PATH}/current"

  PRE_DEPLOY_CMD: "df -h; free -m"
  BACKUP_CMD: "mkdir -p ${DEPLOY_BASE_PATH}/backups && tar --ignore-failed-read -czf ${DEPLOY_BASE_PATH}/backups/backup-$(date +%s).tgz -C ${LINK_PATH} . || [ $? -eq 1 ]"
  STOP_CMD: "cd ${LINK_PATH} && bash bin/manage.sh stop ${ENV_NAME}"
  START_CMD: "cd ${LINK_PATH} && bash bin/manage.sh start ${ENV_NAME}"
  VERIFY_CMD: "curl -sSf http://localhost:8050/overview"
  SMOKE_CMD: "cd ${LINK_PATH} && bash bin/manage.sh smoke ${ENV_NAME}"
  CLEANUP_CMD: "rm -f ${LINK_PATH}/*.log; [ -d ${LINK_PATH}/tmp ] && find ${LINK_PATH}/tmp -mtime +7 -delete"
  NOTIFY_CMD: "echo 'Notify: deployment completed for ${APP_NAME} @ ${DEPLOY_TIMESTAMP}'"

stages:
  - pre_deploy
  - deploy
  - post_deploy

.ssh_script_template: &ssh_script
  extends: .base_deploy
  script:
    - 'echo "Running command: $COMMAND"'
    - 'sshpass -e ssh ${SSH_OPTS} ${DEPLOY_USER}@${DEPLOY_SERVER} "$COMMAND"'

pre_deploy:
  <<: *ssh_script
  stage: pre_deploy
  variables:
    COMMAND: "${PRE_DEPLOY_CMD}"

transfer_code:
  extends: .base_deploy
  stage: deploy
  script:
    - 'echo "Transferring code to ${DEPLOY_SERVER}:${RELEASE_PATH}"'
    - 'git archive --format=tar.gz ${CI_COMMIT_SHA} -o code.tar.gz'
    - 'sshpass -e ssh ${SSH_OPTS} ${DEPLOY_USER}@${DEPLOY_SERVER} "mkdir -p ${RELEASE_PATH}"'
    - 'sshpass -e scp ${SSH_OPTS} code.tar.gz ${DEPLOY_USER}@${DEPLOY_SERVER}:${RELEASE_PATH}/'
    - 'sshpass -e ssh ${SSH_OPTS} ${DEPLOY_USER}@${DEPLOY_SERVER} "cd ${RELEASE_PATH} && tar xzf code.tar.gz && rm code.tar.gz"'
    - 'sshpass -e ssh ${SSH_OPTS} ${DEPLOY_USER}@${DEPLOY_SERVER} "ln -sfn ${RELEASE_PATH} ${LINK_PATH}"'

backup_current:
  <<: *ssh_script
  stage: deploy
  variables:
    COMMAND: "${BACKUP_CMD}"
  needs: [transfer_code]

stop_app:
  <<: *ssh_script
  stage: deploy
  variables:
    COMMAND: "${STOP_CMD}"
  needs: [backup_current]

start_app:
  <<: *ssh_script
  stage: deploy
  variables:
    COMMAND: "${START_CMD}"
  needs: [stop_app]

verify_health:
  <<: *ssh_script
  stage: post_deploy
  variables:
    COMMAND: "${VERIFY_CMD}"
  needs: [start_app]

smoke_tests:
  <<: *ssh_script
  stage: post_deploy
  variables:
    COMMAND: "${SMOKE_CMD}"
  needs: [verify_health]

cleanup:
  <<: *ssh_script
  stage: post_deploy
  variables:
    COMMAND: "${CLEANUP_CMD}"
  needs: [smoke_tests]

notify:
  <<: *ssh_script
  stage: post_deploy
  variables:
    COMMAND: "${NOTIFY_CMD}"
  needs: [cleanup]