variables:
  DEPLOY_USER: "deploy_sa"
  DEPLOY_SERVERS: "mars.butterflycluster.com"
  DEPLOY_PATH: "/apps/data"
  ENV_NAME: "mars"
  SSH_PASSWORD: "$SSH_PASSWORD"

  # Single-line commands for proper parsing
  CMD_TRANSFER: 'git archive --format=tar.gz $CI_COMMIT_SHA -o code.tar.gz && scp "${SSH_OPTS}" code.tar.gz "${DEPLOY_USER}@${DEPLOY_SERVER}:${DEPLOY_PATH}/" && ssh "${SSH_OPTS}" "${DEPLOY_USER}@${DEPLOY_SERVER}" "cd ${DEPLOY_PATH} && tar xzf code.tar.gz && rm code.tar.gz"'
  CMD_BACKUP: 'ssh "${SSH_OPTS}" "${DEPLOY_USER}@${DEPLOY_SERVER}" "tar czf ${DEPLOY_PATH}/backup-$(date +%F).tgz ${DEPLOY_PATH}"'
  CMD_STOP: 'ssh "${SSH_OPTS}" "${DEPLOY_USER}@${DEPLOY_SERVER}" "bash ${DEPLOY_PATH}/manage.sh stop ${ENV_NAME}"'
  CMD_START: 'ssh "${SSH_OPTS}" "${DEPLOY_USER}@${DEPLOY_SERVER}" "bash ${DEPLOY_PATH}/manage.sh start ${ENV_NAME}"'
  CMD_HEALTH: 'ssh "${SSH_OPTS}" "${DEPLOY_USER}@${DEPLOY_SERVER}" bash -lc "curl -sf http://localhost:8050/health || exit 1"'
  CMD_SMOKE: 'ssh "${SSH_OPTS}" "${DEPLOY_USER}@${DEPLOY_SERVER}" bash -lc "bash ${DEPLOY_PATH}/manage.sh smoke ${ENV_NAME}"'
  CMD_CLEANUP: 'ssh "${SSH_OPTS}" "${DEPLOY_USER}@${DEPLOY_SERVER}" "rm -rf ${DEPLOY_PATH}/*.tmp ${DEPLOY_PATH}/backup-*"'

include:
  - project: 'experiments/ci-templates'
    ref: 'development'
    file: 'templates/cd-templates.yml'

.script_job:
  parallel:
    matrix:
      - DEPLOY_SERVER: [$DEPLOY_SERVERS]

stages:
  - pre_deploy
  - deploy
  - post_deploy

pre_deploy_checks:
  extends: .pre_deploy
  variables:
    JOB_CMD: "df -h; uname -a"

transfer_code:
  extends: .transfer
  variables:
    JOB_CMD: "$CMD_TRANSFER"

backup_current:
  extends: .backup
  variables:
    JOB_CMD: "$CMD_BACKUP"
  needs: [transfer_code]

stop_application:
  extends: .stop
  variables:
    JOB_CMD: "$CMD_STOP"
  needs: [backup_current]

start_application:
  extends: .start
  variables:
    JOB_CMD: "$CMD_START"
  needs: [stop_application]

verify_health:
  extends: .verify
  variables:
    JOB_CMD: "$CMD_HEALTH"
  needs: [start_application]

run_smoke_tests:
  extends: .smoke
  variables:
    JOB_CMD: "$CMD_SMOKE"
  needs: [verify_health]

cleanup:
  extends: .cleanup
  variables:
    JOB_CMD: "$CMD_CLEANUP"
  needs: [run_smoke_tests]
